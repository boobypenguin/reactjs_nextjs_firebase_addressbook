{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\programming\\\\Reactjs_Nextjs_sample\\\\reactjs_nextjs_firebase_addressbook\\\\components\\\\Firefind.js\";\nimport React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\n\nvar Firefind =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Firefind, _Component);\n\n  function Firefind(props) {\n    var _this;\n\n    _classCallCheck(this, Firefind);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Firefind).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      borderBottom: \"1px solid gray\" // 初期化。ステートとイベント用メソッドの設定\n\n    });\n\n    _this.state = {\n      input: '',\n      data: []\n    };\n    _this.doChange = _this.doChange.bind(_assertThisInitialized(_this));\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    return _this;\n  } // 入力フィールドに入力時の処理\n\n\n  _createClass(Firefind, [{\n    key: \"doChange\",\n    value: function doChange(e) {\n      this.setState({\n        input: e.target.value\n      });\n    } // ボタンクリック時の処理\n\n  }, {\n    key: \"doAction\",\n    value: function doAction(e) {\n      this.findFireData(this.state.input);\n    } // 検索の実行\n\n  }, {\n    key: \"findFireData\",\n    value: function findFireData(s) {\n      var db = firebase.database();\n      var ref = db.ref('sample/');\n      var self = this;\n      ref.orderByKey().equalTo(s).on('value', function (snapshot) {\n        self.setState({\n          data: snapshot.val()\n        });\n      });\n    } // テーブルの内容の作成\n\n  }, {\n    key: \"getTableData\",\n    value: function getTableData() {\n      var result = [];\n\n      if (this.state.data == null || this.state.data.length == 0) {\n        return [React.createElement(\"tr\", {\n          key: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"NO DATA.\"))];\n      }\n\n      for (var i in this.state.data) {\n        result.push(React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, this.state.data[i].ID), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, this.state.data[i].name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, this.state.data[i].message)));\n      }\n\n      return result;\n    } // レンダリング\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.doChange,\n        style: this.style,\n        value: this.state.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.doAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Find\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.getTableData())));\n    }\n  }]);\n\n  return Firefind;\n}(Component);\n\nexport default Firefind;","map":{"version":3,"sources":["D:\\programming\\Reactjs_Nextjs_sample\\reactjs_nextjs_firebase_addressbook\\components\\Firefind.js"],"names":["React","Component","firebase","Firefind","props","borderBottom","state","input","data","doChange","bind","doAction","e","setState","target","value","findFireData","s","db","database","ref","self","orderByKey","equalTo","on","snapshot","val","result","length","i","push","ID","name","message","style","getTableData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nclass Firefind extends Component {\r\n    style = {\r\n        borderBottom: \"1px solid gray\"\r\n    }\r\n\r\n\r\n    // 初期化。ステートとイベント用メソッドの設定\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n            data: []\r\n        }\r\n        this.doChange = this.doChange.bind(this);\r\n        this.doAction = this.doAction.bind(this);\r\n    }\r\n\r\n\r\n    // 入力フィールドに入力時の処理\r\n    doChange(e) {\r\n        this.setState({\r\n            input: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    // ボタンクリック時の処理\r\n    doAction(e) {\r\n        this.findFireData(this.state.input);\r\n    }\r\n\r\n\r\n    // 検索の実行\r\n    findFireData(s) {\r\n        let db = firebase.database();\r\n        let ref = db.ref('sample/');\r\n        let self = this;\r\n        ref.orderByKey()\r\n            .equalTo(s)\r\n            .on('value', (snapshot) => {\r\n                self.setState({\r\n                    data: snapshot.val()\r\n                });\r\n            });\r\n    }\r\n\r\n\r\n    // テーブルの内容の作成\r\n    getTableData() {\r\n        let result = [];\r\n        if (this.state.data == null || this.state.data.length == 0) {\r\n            return [<tr key=\"0\"><th>NO DATA.</th></tr>];\r\n        }\r\n        for (let i in this.state.data) {\r\n            result.push(<tr key={i}>\r\n                <th>{this.state.data[i].ID}</th>\r\n                <th>{this.state.data[i].name}</th>\r\n                <td>{this.state.data[i].message}</td>\r\n            </tr>);\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    // レンダリング\r\n    render() {\r\n        return (<div>\r\n            <input type=\"text\" onChange={this.doChange}\r\n                style={this.style} value={this.state.input} />\r\n            <button onClick={this.doAction}>Find</button>\r\n            <hr />\r\n            <table><tbody>\r\n                {this.getTableData()}\r\n            </tbody></table>\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default Firefind;\r\n"]},"metadata":{},"sourceType":"module"}