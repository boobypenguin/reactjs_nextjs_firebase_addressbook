{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\programming\\\\Reactjs_Nextjs_sample\\\\reactjs_nextjs_firebase_addressbook\\\\components\\\\AddressShow.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\nimport Router from 'next/router';\n\nvar AddressShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddressShow, _Component);\n\n  function AddressShow(props) {\n    var _this;\n\n    _classCallCheck(this, AddressShow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddressShow).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    if (_this.props.login == false) {\n      Router.push('/address');\n    }\n\n    _this.state = {\n      last: -1,\n      input: '',\n      email: Router.query.email,\n      address: null,\n      message: Router.query.email + 'のデータ'\n    };\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    _this.doChange = _this.doChange.bind(_assertThisInitialized(_this));\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    return _this;\n  } // login,logout処理\n\n\n  _createClass(AddressShow, [{\n    key: \"logined\",\n    value: function logined() {\n      console.log('logined');\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      Router.push('/address');\n    } // アドレスデータの検索\n\n  }, {\n    key: \"getAddress\",\n    value: function getAddress(email) {\n      var db = firebase.database();\n      var ref0 = db.ref('address/' + Lib.encodeEmail(this.props.email) + '/' + Lib.encodeEmail(email) + '/check');\n      ref0.set(false);\n      var ref = db.ref('address/' + Lib.encodeEmail(this.props.email));\n      var self = this;\n      ref.orderByKey().equalTo(Lib.encodeEmail(email)).on('value', function (snapshot) {\n        for (var i in snapshot.val()) {\n          var d = Lib.deepcopy(snapshot.val()[i]);\n          self.setState({\n            address: d\n          });\n          break;\n        }\n      });\n    } // フィールド入力\n\n  }, {\n    key: \"doChange\",\n    value: function doChange(e) {\n      this.setState({\n        input: e.target.value\n      });\n    } // メッセージ送信処理\n\n  }, {\n    key: \"doAction\",\n    value: function doAction() {\n      var from = Lib.encodeEmail(this.props.email);\n      var to = Lib.encodeEmail(this.state.email);\n      var db = firebase.database();\n      var d = new Date().getTime();\n      var ref = db.ref('address/' + from + '/' + to + '/messages/' + d);\n      ref.set('to: ' + this.state.input);\n      var ref2 = db.ref('address/' + to + '/' + from + '/messages/' + d);\n      ref2.set('from: ' + this.state.input);\n      var ref3 = db.ref('address/' + to + '/' + from + '/check/');\n      ref3.set(true);\n      this.setState({\n        input: ''\n      });\n    } // レンダリング\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.address == null) {\n        this.getAddress(Router.query.email);\n      }\n\n      var items = [];\n\n      if (this.state.address != null) {\n        for (var n in this.state.address.messages) {\n          items.unshift(React.createElement(\"li\", {\n            key: n,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, this.state.address.messages[n]));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Account, {\n        onLogined: this.logined,\n        onLogouted: this.logouted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), this.state.address != null ? React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"NAME\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.state.address.name)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"MAIL\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.state.email)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"TEL\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.state.address.tel)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"MEMO\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.state.address.memo)))) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"no-address\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Message:\"), React.createElement(\"input\", {\n        type: \"text\",\n        size: \"40\",\n        value: this.state.input,\n        onChange: this.doChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.doAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"send\")), this.state.address != null && this.state.address.messages != null ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"\\u203B\", this.state.address.name, \"\\u3055\\u3093\\u3068\\u306E\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, items)) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"\\u203B\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"));\n    }\n  }]);\n\n  return AddressShow;\n}(Component);\n\nAddressShow = connect(function (state) {\n  return state;\n})(AddressShow);\nexport default AddressShow;","map":{"version":3,"sources":["D:\\programming\\Reactjs_Nextjs_sample\\reactjs_nextjs_firebase_addressbook\\components\\AddressShow.js"],"names":["React","Component","connect","firebase","Lib","Account","Router","AddressShow","props","fontSize","padding","login","push","state","last","input","email","query","address","message","logined","bind","doChange","doAction","console","log","db","database","ref0","ref","encodeEmail","set","self","orderByKey","equalTo","on","snapshot","i","val","d","deepcopy","setState","e","target","value","from","to","Date","getTime","ref2","ref3","getAddress","items","n","messages","unshift","logouted","name","tel","memo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport firebase from \"firebase\";\r\nimport Lib from '../static/address_lib';\r\nimport Account from '../components/Account';\r\n\r\n\r\nimport Router from 'next/router';\r\n\r\n\r\nclass AddressShow extends Component {\r\n    style = {\r\n        fontSize: \"12pt\",\r\n        padding: \"5px 10px\"\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.login == false) {\r\n            Router.push('/address');\r\n        }\r\n        this.state = {\r\n            last: -1,\r\n            input: '',\r\n            email: Router.query.email,\r\n            address: null,\r\n            message: Router.query.email + 'のデータ'\r\n        }\r\n        this.logined = this.logined.bind(this);\r\n        this.doChange = this.doChange.bind(this);\r\n        this.doAction = this.doAction.bind(this);\r\n    }\r\n\r\n\r\n    // login,logout処理\r\n    logined() {\r\n        console.log('logined');\r\n    }\r\n    logouted() {\r\n        Router.push('/address');\r\n    }\r\n\r\n\r\n    // アドレスデータの検索\r\n    getAddress(email) {\r\n        let db = firebase.database();\r\n        let ref0 = db.ref('address/'\r\n            + Lib.encodeEmail(this.props.email)\r\n            + '/' + Lib.encodeEmail(email) + '/check');\r\n        ref0.set(false);\r\n        let ref = db.ref('address/'\r\n            + Lib.encodeEmail(this.props.email));\r\n        let self = this;\r\n        ref.orderByKey()\r\n            .equalTo(Lib.encodeEmail(email))\r\n            .on('value', (snapshot) => {\r\n                for (let i in snapshot.val()) {\r\n                    let d = Lib.deepcopy(snapshot.val()[i]);\r\n                    self.setState({\r\n                        address: d\r\n                    });\r\n                    break;\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    // フィールド入力\r\n    doChange(e) {\r\n        this.setState({\r\n            input: e.target.value\r\n        });\r\n    }\r\n\r\n\r\n    // メッセージ送信処理\r\n    doAction() {\r\n        let from = Lib.encodeEmail(this.props.email);\r\n        let to = Lib.encodeEmail(this.state.email);\r\n        let db = firebase.database();\r\n        let d = new Date().getTime();\r\n        let ref = db.ref('address/' + from + '/' + to\r\n            + '/messages/' + d);\r\n        ref.set('to: ' + this.state.input);\r\n        let ref2 = db.ref('address/' + to + '/' + from\r\n            + '/messages/' + d);\r\n        ref2.set('from: ' + this.state.input);\r\n        let ref3 = db.ref('address/' + to + '/' + from\r\n            + '/check/');\r\n        ref3.set(true);\r\n        this.setState({ input: '' })\r\n    }\r\n\r\n\r\n    // レンダリング\r\n    render() {\r\n        if (this.state.address == null) {\r\n            this.getAddress(Router.query.email);\r\n        }\r\n        let items = [];\r\n        if (this.state.address != null) {\r\n            for (let n in this.state.address.messages) {\r\n                items.unshift(<li key={n}>\r\n                    {this.state.address.messages[n]}\r\n                </li>);\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Account onLogined={this.logined}\r\n                    onLogouted={this.logouted} />\r\n                <p>{this.state.message}</p>\r\n                <hr />\r\n                {this.state.address != null\r\n                    ?\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>NAME</th>\r\n                                <td>{this.state.address.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>MAIL</th>\r\n                                <td>{this.state.email}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>TEL</th>\r\n                                <td>{this.state.address.tel}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>MEMO</th>\r\n                                <td>{this.state.address.memo}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    :\r\n                    <p>no-address</p>\r\n                }\r\n                <hr />\r\n                <fieldset>\r\n                    <p>Message:</p>\r\n                    <input type=\"text\" size=\"40\"\r\n                        value={this.state.input}\r\n                        onChange={this.doChange} />\r\n                    <button onClick={this.doAction}>send</button>\r\n                </fieldset>\r\n                {this.state.address != null &&\r\n                    this.state.address.messages != null\r\n                    ?\r\n                    <div>\r\n                        <p>※{this.state.address.name}さんとのメッセージ</p>\r\n                        <ul>{items}</ul>\r\n                    </div>\r\n                    :\r\n                    <p>※メッセージはありません。</p>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nAddressShow = connect((state) => state)(AddressShow);\r\nexport default AddressShow;\r\n\r\n"]},"metadata":{},"sourceType":"module"}