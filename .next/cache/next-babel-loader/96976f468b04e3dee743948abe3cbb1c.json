{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\programming\\\\Reactjs_Nextjs_sample\\\\reactjs_nextjs_firebase_addressbook\\\\components\\\\Account.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\nvar Account =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Account, _Component);\n\n  function Account(props) {\n    var _this;\n\n    _classCallCheck(this, Account);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Account).call(this, props)); //this.login_check();\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    _this.login_check = _this.login_check.bind(_assertThisInitialized(_this));\n    return _this;\n  } // ログイン処理\n\n\n  _createClass(Account, [{\n    key: \"login\",\n    value: function login() {\n      var _this2 = this;\n\n      var provider = new firebase.auth.GoogleAuthProvider();\n      var self = this;\n      firebase.auth().signInWithPopup(provider).then(function (result) {\n        _this2.props.dispatch({\n          type: 'UPDATE_USER',\n          value: {\n            login: true,\n            username: result.user.displayName,\n            email: result.user.email,\n            data: _this2.props.data,\n            items: _this2.props.items\n          }\n        });\n\n        _this2.props.onLogined();\n      });\n    } // ログアウト処理\n\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      console.log(\"logout\");\n      firebase.auth().signOut();\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: false,\n          username: '(click here!)',\n          email: '',\n          data: [],\n          items: []\n        }\n      });\n      this.props.onLogouted();\n    } // login,loguoutの✓\n\n  }, {\n    key: \"login_check\",\n    value: function login_check() {\n      if (this.props.login == false) {\n        this.login();\n      } else {\n        this.logout();\n      }\n    } // レンダリング\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"p\", {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"account\",\n        onClick: this.login_check,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"LOGINED: \", this.props.username));\n    }\n  }]);\n\n  return Account;\n}(Component);\n\nAccount = connect(function (state) {\n  return state;\n})(Account);\nexport default Account;","map":{"version":3,"sources":["D:\\programming\\Reactjs_Nextjs_sample\\reactjs_nextjs_firebase_addressbook\\components\\Account.js"],"names":["React","Component","connect","firebase","Account","props","fontSize","padding","login_check","bind","provider","auth","GoogleAuthProvider","self","signInWithPopup","then","result","dispatch","type","value","login","username","user","displayName","email","data","items","onLogined","console","log","signOut","onLogouted","logout","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;IAGMC,O;;;;;AAOF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN,GADe,CAEf;;AAFe,4DANX;AACJC,MAAAA,QAAQ,EAAE,MADN;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAMW;;AAGf,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAHe;AAIlB,G,CAGD;;;;;4BACQ;AAAA;;AACJ,UAAIC,QAAQ,GAAG,IAAIP,QAAQ,CAACQ,IAAT,CAAcC,kBAAlB,EAAf;AACA,UAAIC,IAAI,GAAG,IAAX;AACAV,MAAAA,QAAQ,CAACQ,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EACKK,IADL,CACU,UAACC,MAAD,EAAY;AACd,QAAA,MAAI,CAACX,KAAL,CAAWY,QAAX,CAAoB;AAChBC,UAAAA,IAAI,EAAE,aADU;AAEhBC,UAAAA,KAAK,EAAE;AACHC,YAAAA,KAAK,EAAE,IADJ;AAEHC,YAAAA,QAAQ,EAAEL,MAAM,CAACM,IAAP,CAAYC,WAFnB;AAGHC,YAAAA,KAAK,EAAER,MAAM,CAACM,IAAP,CAAYE,KAHhB;AAIHC,YAAAA,IAAI,EAAE,MAAI,CAACpB,KAAL,CAAWoB,IAJd;AAKHC,YAAAA,KAAK,EAAE,MAAI,CAACrB,KAAL,CAAWqB;AALf;AAFS,SAApB;;AAUA,QAAA,MAAI,CAACrB,KAAL,CAAWsB,SAAX;AACH,OAbL;AAcH,K,CAGD;;;;6BACS;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA1B,MAAAA,QAAQ,CAACQ,IAAT,GAAgBmB,OAAhB;AACA,WAAKzB,KAAL,CAAWY,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAE,aADU;AAEhBC,QAAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAE,KADJ;AAEHC,UAAAA,QAAQ,EAAE,eAFP;AAGHG,UAAAA,KAAK,EAAE,EAHJ;AAIHC,UAAAA,IAAI,EAAE,EAJH;AAKHC,UAAAA,KAAK,EAAE;AALJ;AAFS,OAApB;AAUA,WAAKrB,KAAL,CAAW0B,UAAX;AACH,K,CAGD;;;;kCACc;AACV,UAAI,KAAK1B,KAAL,CAAWe,KAAX,IAAoB,KAAxB,EAA+B;AAC3B,aAAKA,KAAL;AACH,OAFD,MAEO;AACH,aAAKY,MAAL;AACH;AACJ,K,CAGD;;;;6BACS;AACL,aACI;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AACI,QAAA,OAAO,EAAE,KAAKxB,WADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEc,KAAKH,KAAL,CAAWgB,QAFzB,CADJ,CADJ;AAQH;;;;EAzEiBpB,S;;AA6EtBG,OAAO,GAAGF,OAAO,CAAC,UAAC+B,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAP,CAA0B7B,OAA1B,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport firebase from \"firebase\";\r\n\r\n\r\nclass Account extends Component {\r\n    style = {\r\n        fontSize: \"12pt\",\r\n        padding: \"5px 10px\"\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //this.login_check();\r\n        this.login_check = this.login_check.bind(this);\r\n    }\r\n\r\n\r\n    // ログイン処理\r\n    login() {\r\n        let provider = new firebase.auth.GoogleAuthProvider();\r\n        var self = this;\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then((result) => {\r\n                this.props.dispatch({\r\n                    type: 'UPDATE_USER',\r\n                    value: {\r\n                        login: true,\r\n                        username: result.user.displayName,\r\n                        email: result.user.email,\r\n                        data: this.props.data,\r\n                        items: this.props.items\r\n                    }\r\n                });\r\n                this.props.onLogined();\r\n            });\r\n    }\r\n\r\n\r\n    // ログアウト処理\r\n    logout() {\r\n        console.log(\"logout\");\r\n        firebase.auth().signOut();\r\n        this.props.dispatch({\r\n            type: 'UPDATE_USER',\r\n            value: {\r\n                login: false,\r\n                username: '(click here!)',\r\n                email: '',\r\n                data: [],\r\n                items: []\r\n            }\r\n        });\r\n        this.props.onLogouted();\r\n    }\r\n\r\n\r\n    // login,loguoutの✓\r\n    login_check() {\r\n        if (this.props.login == false) {\r\n            this.login();\r\n        } else {\r\n            this.logout();\r\n        }\r\n    }\r\n\r\n\r\n    // レンダリング\r\n    render() {\r\n        return (\r\n            <p className=\"login\">\r\n                <span className=\"account\"\r\n                    onClick={this.login_check}>\r\n                    LOGINED: {this.props.username}\r\n                </span>\r\n            </p>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nAccount = connect((state) => state)(Account);\r\nexport default Account;\r\n"]},"metadata":{},"sourceType":"module"}