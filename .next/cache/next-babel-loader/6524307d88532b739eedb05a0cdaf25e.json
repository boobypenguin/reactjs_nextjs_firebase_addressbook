{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; // ステート初期値\n\nvar initial = {\n  message: 'START',\n  data: [],\n  number: [],\n  result: 0 // レデューサー\n\n};\n\nfunction calcReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intitial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // 計算実行\n    case 'ENTER':\n      var data2 = state.data.slice();\n      var s = action.value;\n      data2.unshift(s);\n      var num = s.replace(/[^0-9]/g, \"\");\n      var number2 = state.number.slice();\n      number2.unshift(num);\n      var result = state.result * 1 + num * 1;\n      return {\n        message: 'ENTER',\n        data: data2,\n        number: number2,\n        result: result\n      };\n    // リセット\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        data: [],\n        number: [],\n        result: 0\n      };\n    // デフォルト\n\n    default:\n      return state;\n  }\n} // initStore関数\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(calcReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["D:\\programming\\Reactjs_Nextjs_sample\\reactjs_nextjs_firebase_addressbook\\store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","data","number","result","calcReducer","state","intitial","action","type","data2","slice","s","value","unshift","num","replace","number2","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAGA;;AACA,IAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,OADG;AAEZC,EAAAA,IAAI,EAAE,EAFM;AAGZC,EAAAA,MAAM,EAAE,EAHI;AAIZC,EAAAA,MAAM,EAAE,CAJI,CAQhB;;AARgB,CAAhB;;AASA,SAASC,WAAT,GAA+C;AAAA,MAA1BC,KAA0B,uEAAlBC,QAAkB;AAAA,MAARC,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,OAAL;AACI,UAAIC,KAAK,GAAGJ,KAAK,CAACJ,IAAN,CAAWS,KAAX,EAAZ;AACA,UAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAf;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcF,CAAd;AACA,UAAIG,GAAG,GAAGH,CAAC,CAACI,OAAF,CAAU,SAAV,EAAqB,EAArB,CAAV;AACA,UAAIC,OAAO,GAAGX,KAAK,CAACH,MAAN,CAAaQ,KAAb,EAAd;AACAM,MAAAA,OAAO,CAACH,OAAR,CAAgBC,GAAhB;AACA,UAAIX,MAAM,GAAIE,KAAK,CAACF,MAAN,GAAe,CAAhB,GAAsBW,GAAG,GAAG,CAAzC;AACA,aAAO;AACHd,QAAAA,OAAO,EAAE,OADN;AAEHC,QAAAA,IAAI,EAAEQ,KAFH;AAGHP,QAAAA,MAAM,EAAEc,OAHL;AAIHb,QAAAA,MAAM,EAAEA;AAJL,OAAP;AAMJ;;AACA,SAAK,OAAL;AACI,aAAO;AACHH,QAAAA,OAAO,EAAE,OADN;AAEHC,QAAAA,IAAI,EAAE,EAFH;AAGHC,QAAAA,MAAM,EAAE,EAHL;AAIHC,QAAAA,MAAM,EAAE;AAJL,OAAP;AAMJ;;AACA;AACI,aAAOE,KAAP;AA1BR;AA4BH,C,CAGD;;;AACA,OAAO,SAASY,SAAT,GAAoC;AAAA,MAAjBZ,KAAiB,uEAATN,OAAS;AACvC,SAAOH,WAAW,CAACQ,WAAD,EAAcC,KAAd,EACdR,eAAe,CAACC,eAAD,CADD,CAAlB;AAEH","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\n// ステート初期値\r\nconst initial = {\r\n    message: 'START',\r\n    data: [],\r\n    number: [],\r\n    result: 0\r\n}\r\n\r\n\r\n// レデューサー\r\nfunction calcReducer(state = intitial, action) {\r\n    switch (action.type) {\r\n        // 計算実行\r\n        case 'ENTER':\r\n            let data2 = state.data.slice();\r\n            let s = action.value;\r\n            data2.unshift(s);\r\n            let num = s.replace(/[^0-9]/g, \"\");\r\n            let number2 = state.number.slice();\r\n            number2.unshift(num);\r\n            let result = (state.result * 1) + (num * 1);\r\n            return {\r\n                message: 'ENTER',\r\n                data: data2,\r\n                number: number2,\r\n                result: result\r\n            };\r\n        // リセット\r\n        case 'RESET':\r\n            return {\r\n                message: 'RESET',\r\n                data: [],\r\n                number: [],\r\n                result: 0\r\n            };\r\n        // デフォルト\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n// initStore関数\r\nexport function initStore(state = initial) {\r\n    return createStore(calcReducer, state,\r\n        applyMiddleware(thunkMiddleware))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}