{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\"; // Firebase設定\n\nvar config = {\n  apiKey: \"AIzaSyC-5QuzovDqD6iS8-Yqyl3bu2gShVzy0cg\",\n  authDomain: \"boobypenguin-angular-app.firebaseapp.com\",\n  databaseURL: \"https://boobypenguin-angular-app.firebaseio.com\",\n  projectId: \"boobypenguin-angular-app\",\n  storageBucket: \"boobypenguin-angular-app.appspot.com\",\n  messagingSenderId: \"175259266858\",\n  appId: \"1:175259266858:web:853814482f10f1d1\"\n}; // Firebase初期化\n\nvar fireapp;\n\ntry {\n  fireapp = firebase.initializeApp(config);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp; // ステート初期値\n\nvar initial = {\n  login: false,\n  username: '(click here!)',\n  email: '',\n  data: [],\n  items: [] // レデューサー\n\n};\n\nfunction fireReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intitial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // ダミー\n    case 'UPDATE_USER':\n      return action.value;\n    // デフォルト\n\n    default:\n      return state;\n  }\n} // initStore関数\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["D:\\programming\\Reactjs_Nextjs_sample\\reactjs_nextjs_firebase_addressbook\\store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fireapp","initializeApp","error","console","log","message","initial","login","username","email","data","items","fireReducer","state","intitial","action","type","value","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAGA;;AACA,IAAIC,MAAM,GAAG;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,0CAFH;AAGTC,EAAAA,WAAW,EAAE,iDAHJ;AAITC,EAAAA,SAAS,EAAE,0BAJF;AAKTC,EAAAA,aAAa,EAAE,sCALN;AAMTC,EAAAA,iBAAiB,EAAE,cANV;AAOTC,EAAAA,KAAK,EAAE;AAPE,CAAb,C,CAWA;;AACA,IAAIC,OAAJ;;AACA,IAAI;AACAA,EAAAA,OAAO,GAAGT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB,CAAV;AACH,CAFD,CAEE,OAAOU,KAAP,EAAc;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;;AACD,eAAeL,OAAf,C,CAGA;;AACA,IAAMM,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAE,KADK;AAEZC,EAAAA,QAAQ,EAAE,eAFE;AAGZC,EAAAA,KAAK,EAAE,EAHK;AAIZC,EAAAA,IAAI,EAAE,EAJM;AAKZC,EAAAA,KAAK,EAAE,EALK,CAShB;;AATgB,CAAhB;;AAUA,SAASC,WAAT,GAA+C;AAAA,MAA1BC,KAA0B,uEAAlBC,QAAkB;AAAA,MAARC,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,aAAL;AACI,aAAOD,MAAM,CAACE,KAAd;AACJ;;AACA;AACI,aAAOJ,KAAP;AANR;AAQH,C,CAGD;;;AACA,OAAO,SAASK,SAAT,GAAoC;AAAA,MAAjBL,KAAiB,uEAATP,OAAS;AACvC,SAAOlB,WAAW,CAACwB,WAAD,EAAcC,KAAd,EACdxB,eAAe,CAACC,eAAD,CADD,CAAlB;AAEH","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport firebase from \"firebase\";\r\n\r\n\r\n// Firebase設定\r\nvar config = {\r\n    apiKey: \"AIzaSyC-5QuzovDqD6iS8-Yqyl3bu2gShVzy0cg\",\r\n    authDomain: \"boobypenguin-angular-app.firebaseapp.com\",\r\n    databaseURL: \"https://boobypenguin-angular-app.firebaseio.com\",\r\n    projectId: \"boobypenguin-angular-app\",\r\n    storageBucket: \"boobypenguin-angular-app.appspot.com\",\r\n    messagingSenderId: \"175259266858\",\r\n    appId: \"1:175259266858:web:853814482f10f1d1\"\r\n};\r\n\r\n\r\n// Firebase初期化\r\nvar fireapp;\r\ntry {\r\n    fireapp = firebase.initializeApp(config);\r\n} catch (error) {\r\n    console.log(error.message);\r\n}\r\nexport default fireapp;\r\n\r\n\r\n// ステート初期値\r\nconst initial = {\r\n    login: false,\r\n    username: '(click here!)',\r\n    email: '',\r\n    data: [],\r\n    items: []\r\n}\r\n\r\n\r\n// レデューサー\r\nfunction fireReducer(state = intitial, action) {\r\n    switch (action.type) {\r\n        // ダミー\r\n        case 'UPDATE_USER':\r\n            return action.value;\r\n        // デフォルト\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n// initStore関数\r\nexport function initStore(state = initial) {\r\n    return createStore(fireReducer, state,\r\n        applyMiddleware(thunkMiddleware))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}